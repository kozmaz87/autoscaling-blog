{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.small",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "Subnets": {
      "Description" : "Subnet IDs",
      "Type" : "List<AWS::EC2::Subnet::Id>"
    },
    "AmiID": {
      "Description": "The Base AMI to be used",
      "Type": "String"
    },
    "MaxSize": {
      "Description": "ASG sizing",
      "Type": "Number"
    },
    "MinSize": {
      "Description": "ASG sizing",
      "Type": "Number"
    },
    "DesiredSize": {
      "Description": "ASG sizing",
      "Type": "Number"
    },
    "UserData": {
      "Description": "Provisioning script",
      "Type": "String"
    }
  },
  "Resources": {
    "elbautoscaleblog": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": { "Ref": "Subnets" },
        "HealthCheck": {
          "HealthyThreshold": "5",
          "Interval": "30",
          "Target": "HTTP:80/",
          "Timeout": "5",
          "UnhealthyThreshold": "5"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "60"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "SecurityGroups": [
          {
            "Ref": "sgautoscaleblog"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ]
      }
    },
    "asgautoscaleblog": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "eu-central-1b",
          "eu-central-1a"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "2",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "MaxSize": { "Ref": "MaxSize" },
        "MinSize": { "Ref": "MinSize" },
        "VPCZoneIdentifier": { "Ref": "Subnets" },
        "LaunchConfigurationName": {
          "Ref": "lcautoscaleblog"
        },
        "LoadBalancerNames": [
          {
            "Ref": "elbautoscaleblog"
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "lcautoscaleblog": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": { "Ref": "AmiID" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups": [
          {
            "Ref": "sgautoscaleblog"
          },
          "sg-a1100cc8",
          "sg-a1100cc8"
        ],
        "UserData": {
          "Fn::Base64": { "Ref": "UserData" }
        }
      }
    },
    "sgautoscaleblog": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "autoscale-blog security group",
        "VpcId": "vpc-1c9e7475"
      }
    },
    "scalingscaledownpolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": "300",
        "ScalingAdjustment": "-1",
        "AutoScalingGroupName": {
          "Ref": "asgautoscaleblog"
        }
      }
    },
    "scalingscaleuppolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": "300",
        "ScalingAdjustment": "1",
        "AutoScalingGroupName": {
          "Ref": "asgautoscaleblog"
        }
      }
    },
    "alarmcpuhigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "This will alarm when cpu usage average is higher than 90% for 15 minutes ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "3",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "90.0",
        "Unit": "Percent",
        "AlarmActions": [
          {
            "Ref": "scalingscaleuppolicy"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "autoscale-blog"
          }
        ]
      }
    },
    "alarmcpulow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "This will alarm when cpu usage average is lower than 5% for 15 minutes ",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": "3",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "5.0",
        "Unit": "Percent",
        "AlarmActions": [
          {
            "Ref": "scalingscaledownpolicy"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "autoscale-blog"
          }
        ]
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgautoscaleblog"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgautoscaleblog"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgautoscaleblog"
        },
        "SourceSecurityGroupOwnerId": "967165465090"
      }
    },
    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgautoscaleblog"
        },
        "IpProtocol": "icmp",
        "FromPort": "0",
        "ToPort": "0",
        "SourceSecurityGroupId": {
          "Ref": "sgautoscaleblog"
        },
        "SourceSecurityGroupOwnerId": "967165465090"
      }
    },
    "ingress8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgautoscaleblog"
        },
        "IpProtocol": "udp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgautoscaleblog"
        },
        "SourceSecurityGroupOwnerId": "967165465090"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgautoscaleblog"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "Autoscaler Demo"
}